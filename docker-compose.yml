version: "3"

volumes:
  postgres-data:

services:

  # nginx:
  #   restart: always
  #   image: nginx:latest
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #   ports:
  #     - '80:7707'
  #     # - '443:7707'
  #   links:
  #     - postgres:postgres.local
  #     - api:api.local
  #     - kafka:kafka.local
  #     - client:client.local
  #   depends_on: 
  #     - api
  #     - client
  
  api:
    build:
      context: server
      dockerfile: Dockerfile
      args:
        NODE_VERSION: "12.16.2"
        APP_VERSION:
    links:
      - postgres:postgres.service.mesh
      - kafka:kafka.service.mesh
    volumes:
      - ./server:/app
    ports:
      - '5000:5000'
    depends_on:
      - kafka
      - postgres
    environment:
      NODE_ENV: development
      PORT: 5000
      APP_VERSION:

  # worker:
  #   build:
  #     context: server
  #     dockerfile: Dockerfile
  #     args:
  #       NODE_VERSION: "12.16.2"
  #       APP_VERSION:
  #   command: yarn run start:worker
  #   links:
  #     - postgres:postgres.service.mesh
  #     - kafka:kafka.service.mesh
  #   volumes:
  #     - ./server:/app
  #   depends_on:
  #     - kafka
  #     - postgres
  #   environment:
  #     NODE_ENV: development
  #     PORT: 5000
  #     APP_VERSION:
      


  client:
    build:
      context: client
      dockerfile: Dockerfile
      args:
        NODE_VERSION: "12.16.2"
        APP_VERSION: "01"

    ports:
      - 9229:9229
      - 3000:3000
    expose:
      - "3000"
    volumes:
      - ./client:/app
      - /app/node_modules/

    depends_on:
      - api
    environment:
      NODE_ENV: development
      PORT: 3000

  kafka:
    image: spotify/kafka
    environment:
      TOPICS: command-stream,event-stream
      AUTO_CREATE_TOPICS: "true"
      NUM_PARTITIONS: 1

  postgres:
    # this image should match the major/minor version we use in prod!
    image: postgres:latest
    ports:
      - "5435:5435"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: qa-database
      POSTGRES_INITDB_ARGS: ''
